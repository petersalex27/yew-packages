init: 2023-10-03T18:54:19.559779Z
lookahead: 7
rules?: true
rules: {[{[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:1]:let_t=let; stat=0
action(end): stack=[{test_token@[1:1]:let_t=let}]
lookahead: 6
rules?: true
rules: {[[7] {[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
rule(applied): stat=4; rule=rule([7] -> shift); nodes=[{test_token@[1:1]:let_t=let}]
action(end): stack=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}]
lookahead: 3
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
rule(applied): stat=0; rule=rule([7 6] -> declaration); nodes=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}]
action(end): stack=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}]]
lookahead: 3
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:7]:mul_t=*; stat=0
action(end): stack=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] {test_token@[1:7]:mul_t=*}]
lookahead: 5
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:9]:integer_t=3; stat=0
action(end): stack=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] {test_token@[1:7]:mul_t=*} {test_token@[1:9]:integer_t=3}]
lookahead: 5
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
rule(applied): stat=0; rule=rule([5] -> expression); nodes=[{test_token@[1:9]:integer_t=3}]
action(end): stack=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] {test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}]]
lookahead: 5
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:11]:integer_t=3; stat=0
action(end): stack=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] {test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] {test_token@[1:11]:integer_t=3}]
lookahead: 8
rules?: true
rules: {[{[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[2 0] {{assignment 0x1044d1eb0}}}] true}
rule(applied): stat=0; rule=rule([5] -> expression); nodes=[{test_token@[1:11]:integer_t=3}]
rule(applied): stat=0; rule=rule([3 0 0] -> expression); nodes=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]
rule(applied): stat=0; rule=rule([2 0] -> assignment); nodes=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]]
action(end): stack=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]]]
lookahead: 8
rules?: true
rules: {[{[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[2 0] {{assignment 0x1044d1eb0}}}] true}
shift: tok=test_token@[1:13]:in_t=in; stat=0
action(end): stack=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}]
lookahead: 3
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
rule(applied): stat=0; rule=rule([1 8] -> context); nodes=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}]
action(end): stack=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}]]
lookahead: 3
rules?: true
rules: {[{[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:16]:mul_t=*; stat=0
action(end): stack=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}] {test_token@[1:16]:mul_t=*}]
lookahead: 6
rules?: true
rules: {[[7] {[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:18]:id_t=a; stat=0
action(end): stack=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}] {test_token@[1:16]:mul_t=*} {test_token@[1:18]:id_t=a}]
lookahead: 6
rules?: true
rules: {[[7] {[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
rule(applied): stat=0; rule=rule([6] -> expression); nodes=[{test_token@[1:18]:id_t=a}]
action(end): stack=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}] {test_token@[1:16]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:18]:id_t=a}]]
lookahead: 6
rules?: true
rules: {[[7] {[7 6] {{declaration 0x1044d1fd0}}} {[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[1 8] {{context 0x1044d1e20}}}] true}
shift: tok=test_token@[1:20]:id_t=a; stat=0
action(end): stack=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}] {test_token@[1:16]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:18]:id_t=a}] {test_token@[1:20]:id_t=a}]
lookahead: 18446744073709551615
rules?: true
rules: {[{[6] {{expression 0x1044d1f40}}} {[5] {{expression 0x1044d1f40}}} {[4 0 0] {{expression 0x1044d1f40}}} {[3 0 0] {{expression 0x1044d1f40}}} {[2 0] {{assignment 0x1044d1eb0}}} {[1 8] {{context 0x1044d1e20}}} {[9 0] {{expression 0x1044d1f40}}}] false}
rule(applied): stat=0; rule=rule([6] -> expression); nodes=[{test_token@[1:20]:id_t=a}]
rule(applied): stat=0; rule=rule([3 0 0] -> expression); nodes=[{test_token@[1:16]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:18]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:20]:id_t=a}]]
rule(applied): stat=0; rule=rule([9 0] -> expression); nodes=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}] ast_test_node:expr_t=[{test_token@[1:16]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:18]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:20]:id_t=a}]]]
action(end): stack=[ast_test_node:expr_t=[ast_test_node:context_t=[ast_test_node:assign_t=[ast_test_node:decl_t=[{test_token@[1:1]:let_t=let} {test_token@[1:5]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:7]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:9]:integer_t=3}] ast_test_node:expr_t=[{test_token@[1:11]:integer_t=3}]]] {test_token@[1:13]:in_t=in}] ast_test_node:expr_t=[{test_token@[1:16]:mul_t=*} ast_test_node:expr_t=[{test_token@[1:18]:id_t=a}] ast_test_node:expr_t=[{test_token@[1:20]:id_t=a}]]]]
